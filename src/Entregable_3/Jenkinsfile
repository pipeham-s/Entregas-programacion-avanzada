pipeline {
    agent any
    environment {
        PROJECT_DIR = 'src/Entregable_3'
        PYTHON_VERSION = 'python3'
        VENV_DIR = 'venv'
        DOCS_DIR = "${PROJECT_DIR}/docs"
    }
    stages {
        stage('Setup') {
    steps {
        echo "Instalando dependencias..."
        sh """
        # Crear entorno virtual si no existe
        cd ${PROJECT_DIR}
        ${PYTHON_VERSION} -m venv ${VENV_DIR}
        . ${VENV_DIR}/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        """
    }
}
stage('Generate PyDocs') {
    steps {
        echo "Generando documentaci贸n PyDoc..."
        sh """
        mkdir -p src/Entregable_3/docs
        cd src/Entregable_3

        # Generar la documentaci贸n utilizando pydoc
        find . -name '*.py' ! -name '__init__.py' -exec python -m pydoc -w {} \;
        """
    }
}



        stage('Publish PyDocs') {
            steps {
                echo "Publicando PyDocs en Jenkins..."
                publishHTML(target: [
                    reportDir: "${DOCS_DIR}",
                    reportFiles: 'index.html',
                    reportName: 'Documentaci贸n PyDocs'
                ])
            }
        }
        stage('Deliver') {
            steps {
                echo "Simulando entrega..."
                sh "echo 'Entrega completada exitosamente.'"
            }
        }
    }
    post {
        always {
            echo "Pipeline finalizado."
        }
        failure {
            echo "Pipeline fall贸. Verifica los errores."
        }
        success {
            echo "Pipeline ejecutado exitosamente."
        }
    }
}
