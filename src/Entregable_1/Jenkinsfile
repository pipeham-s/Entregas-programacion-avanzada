pipeline {
    agent any

    environment {
        PROJECT_DIR = 'src'
        VENV_DIR = 'venv'
        PYTHON_VERSION = 'python3'
    }

    stages {
        stage('Setup Python') {
            steps {
                echo "Instalando Python y configurando entorno virtual..."
                sh """
                sudo apt update -y
                sudo apt install -y ${PYTHON_VERSION} ${PYTHON_VERSION}-venv ${PYTHON_VERSION}-pip
                cd ${PROJECT_DIR}
                ${PYTHON_VERSION} -m venv ${VENV_DIR}
                . ${VENV_DIR}/bin/activate
                pip install --upgrade pip
                """
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "Instalando dependencias..."
                sh """
                cd ${PROJECT_DIR}
                . ${VENV_DIR}/bin/activate
                pip install -r requirements.txt
                """
            }
        }

        stage('Run Tests') {
            steps {
                echo "Ejecutando tests..."
                sh """
                cd ${PROJECT_DIR}
                . ${VENV_DIR}/bin/activate
                pytest --cov=trivia --cov-report=term --cov-report=html
                """
            }
        }

        stage('Deploy') {
            steps {
                echo "Desplegando aplicación en EC2..."
                sh """
                cd ${PROJECT_DIR}
                . ${VENV_DIR}/bin/activate
                pkill -f "uvicorn app:app" || true
                nohup python -m uvicorn app:app --host 0.0.0.0 --port 8000 &
                """
            }
        }
    }

    post {
        always {
            echo "Limpieza del workspace..."
            cleanWs()
        }
        success {
            echo "Despliegue exitoso."
        }
        failure {
            echo "El despliegue falló. Verifica los errores."
        }
    }
}
